---
# source: https://docs.docker.com/engine/install/ubuntu/
- name: Ensure Prequisitions for Docker are met
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    state: present

- name: Ensure Docker Key is present
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Ensure Docker Repository is present
  apt_repository:
    repo: deb [arch={{ 'armhf' if 'arm' in ansible_architecture else 'amd64' }}] https://download.docker.com/linux/{{ ansible_facts['distribution'].lower().replace('raspbian','debian') }} {{ ansible_facts['lsb']['codename'] }} stable
    state: present
    filename: docker

- name: Ensure docker-compose is absent from apt package
  apt:
    name:
      - docker-compose
    state: absent

- name: Ensure Docker is installed
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - python3
      - python3-pip
    state: present

- name: Ensure pip is up-to-date
  shell: "pip3 install --upgrade pip"
  become: yes

- name: Ensure docker-compose installed
  pip:
    name: docker-compose
    executable: pip3
    state: present
  become: true

- name: Determine existing sudo users
  shell: 'grep sudo /etc/group | cut -d: -f4 | tr , "\n"'
  changed_when: false 
  register: sudo_users

- name: Ensure Users are in Docker group
  user:
    name: '{{ item }}'
    groups: docker
    append: yes
    state: present
  with_items: '{{ sudo_users.stdout_lines }}'

- name: Prune unsued docker images
  shell: 'docker image prune -a --force'
  become: yes
  when: docker_prune_images|bool