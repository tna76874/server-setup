---
- name: Register dns-file state
  stat: path="{{ project_root }}/dnsconfig.log"
  register: dns_file
  changed_when: not dns_file.stat.exists
  notify:
    - dns init

- name: Ensure directories
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    group: "{{ item.owner }}"
    state: directory
  loop:
    - { path: "{{ project_root }}", owner: "{{ mailserver_user }}" }    

- name: Ensure files
  copy:
    src: "{{ item.file }}"
    dest: "{{ item.destination }}"
    owner: "{{ item.owner }}"
    group: "{{ item.owner }}"
    mode: "{{ item.mode }}"
  loop:
    - { file: "docker-compose.yml", destination: "{{ project_root }}/docker-compose.yml", owner: "{{ mailserver_user }}", mode: "0755" }
  notify:
    - copy mailserver.env

- name: Ensure source files from github
  get_url:
    url: "{{ item.file }}"
    dest: "{{ item.destination }}"
    force: "{{ item.force }}"
    owner: "{{ item.owner }}"
    group: "{{ item.owner }}"
    mode: "{{ item.mode }}"
  loop:
    - { file: "https://raw.githubusercontent.com/docker-mailserver/docker-mailserver/master/setup.sh", destination: "{{ project_root }}/setup.sh", force: "no", owner: "{{ mailserver_user }}", mode: "0775"}
    - { file: "https://raw.githubusercontent.com/docker-mailserver/docker-mailserver/master/mailserver.env", destination: "{{ project_root }}/mailserver.env.example", force: "no", owner: "{{ mailserver_user }}", mode: "0775"}
  become: yes
  notify:
    - copy mailserver.env

- name: Ensure templates
  template:
    src: "{{ item.file }}"
    dest: "{{ item.destination }}"
    owner: "{{ item.owner }}"
    group: "{{ item.owner }}"
    mode: "{{ item.mode }}"
    force: "{{ item.force }}"
  loop:
    - { file: "env.j2", destination: "{{ project_root }}/.env", owner: "{{ mailserver_user }}", mode: "0644", force: "yes" }
    - { file: "install.j2", destination: "{{ project_root }}/install.sh", owner: "{{ mailserver_user }}", mode: "0755", force: "yes" }
  become: yes
  notify:
    - copy mailserver.env

- import_tasks: letsencrypt.yml

- name: Checking restart
  assert: { that: true, quiet: true }
  changed_when: restart_compose
  notify: compose down

- name: Ensure docker-compose pulled and up
  assert: { that: true, quiet: true }
  changed_when: true
  notify: compose up