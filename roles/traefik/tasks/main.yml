---
- name: Check .env file
  stat: 
    path: "{{ project_root }}/.env"
  register: env_file
  changed_when: not env_file.stat.exists
  notify:
    - init env

- name: Check compose file
  stat: 
    path: "{{ project_root }}/docker-compose.yml"
  register: compose_file
  changed_when: not compose_file.stat.exists

- name: Ensure sendmail is absent
  apt:
    name:
     - sendmail
     - postfix
    state: absent
  when: traefik_mailserver_enabled


######################################

- name: Ensure directories
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    state: directory
  loop:
    - { path: "{{ project_root }}", owner: "{{ server_user }}" }


## ENSURE NETWORK
- name: Create a network
  community.docker.docker_network:
    name: "{{ traefik_network }}"

- name: init templates
  template:
    src: "{{ item.file }}"
    dest: "{{ item.destination }}"
    owner: "{{ item.owner }}"
    group: "{{ item.owner }}"
    mode: "{{ item.mode }}"
    force: "{{ item.force }}"
  become: yes
  loop:
    - { file: "docker-compose.j2", destination: "{{ project_root }}/docker-compose.yml", owner: "{{ server_user }}", mode: "0644", force: yes }
  notify:
    - compose down
    - compose up

- name: Compose startup state
  assert: { that: true, quiet: true }
  changed_when: true
  notify:
    - compose up
  when: start_compose|bool

### ensure cron restart on reboot
- name: cron restart on reboot
  block:
    - name: Ensure cron-file
      cron:
        name: "restart_traefik"
        cron_file: "restart_traefik"
        special_time: reboot
        job: "sleep 10 && {{ compose_base_bash }} down && {{ compose_base_bash }} up -d > /dev/null 2>&1"
        state: present
        user: root
      become: yes