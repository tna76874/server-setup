---
- name: Check .env file
  stat: 
    path: "{{ project_root }}/.env"
  register: env_file
  changed_when: not env_file.stat.exists
  notify:
    - init env

- name: Ensure directories
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    state: directory
    recurse: "{{ item.r }}"
  loop:
    - { path: "{{ project_root }}", owner: "{{ server_user }}", r: "no" }

###########################################################

- name: Query collabora tags
  uri:
    url: https://hub.docker.com/v2/repositories/collabora/code/tags?page_size=1000
    return_content: true                                             
  register: collabora_dockerhub_tags
  ignore_errors: yes

- name: Registering release tag
  set_fact:
    tag_collabora: "{{ (collabora_dockerhub_tags.json['results'] | rejectattr('name', 'equalto', 'latest') | rejectattr('name', 'contains', '-') | list)[0]['name'] }}"
  when: (tag_collabora == None)

###########################################################

- name: Create aliasgroup list
  set_fact: 
      aliasgroups_list: "{{ aliasgroups_list|default([]) + [ 'aliasgroup{:}'.format(grpidx+1)+'=https://'+item+':443,https://'+item.replace('.','\\\\.')+':443' ] }}"
  loop: "{{ aliasgroups }}"
  loop_control:
    index_var: grpidx

- name: Ensure nginx template
  template:
    src: "{{ item.file }}"
    dest: "{{ item.destination }}"
    owner: "{{ item.owner }}"
    mode: "{{ item.mode }}"
  loop:
    - { file: "nginx.j2", destination: "/etc/nginx/{{ nginx_domain_name }}.d/nginx.conf", owner: "root", mode: "0644" }
  become: yes
  when: nginx_domain_name != None
  notify:
    - reload nginx

- name: init templates
  template:
    src: "{{ item.file }}"
    dest: "{{ item.destination }}"
    owner: "{{ item.owner }}"
    group: "{{ item.owner }}"
    mode: "{{ item.mode }}"
  become: yes
  loop:
    - { file: "docker-compose.j2", destination: "{{ project_root }}/docker-compose.yml", owner: "{{ server_user }}", mode: "0755" }
  notify:
    - compose down
    - compose up

- name: Compose startup state
  assert: { that: true, quiet: true }
  changed_when: true
  notify:
    - compose up
  when: start_compose|bool

- name: Flush handlers
  meta: flush_handlers