---
- name: Check .env file
  stat: 
    path: "{{ project_root }}/.env"
  register: env_file
  changed_when: not env_file.stat.exists
  notify:
    - init env

######################### QUERY IMAGE TAGS #########################
- name: Query latest docker release
  block:
  - name: Query latest docker release
    uri:
      url: https://hub.docker.com/v2/repositories/gotify/server/tags?page_size=10000
      return_content: true
    register: gotify_version_query
    ignore_errors: yes

  - name: Registering release tags for
    set_fact:
      docker_release: "{{ (gotify_version_query.json['results']
                          | rejectattr('name', 'equalto', 'latest')
                          | selectattr('name', 'match', '^[0-9]+\\.[0-9]+\\.[0-9]+$')
                          | map(attribute='name')
                          | list | sort
                          | last) }}"
    when: (docker_release == None)
#####################################################################

- name: Check compose file
  stat: 
    path: "{{ project_root }}/docker-compose.yml"
  register: compose_file
  changed_when: not compose_file.stat.exists
  notify:
    - ensure compose down

- name: Flush handlers
  meta: flush_handlers

- name: Ensure directories
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    state: directory
  loop:
    - { path: "{{ project_root }}", owner: "{{ server_user }}" }

- name: Ensure nginx template
  template:
    src: "{{ item.file }}"
    dest: "{{ item.destination }}"
    owner: "{{ item.owner }}"
    mode: "{{ item.mode }}"
  loop:
    - { file: "nginx.j2", destination: "/etc/nginx/{{ nginx_domain_name }}.d/nginx.conf", owner: "root", mode: "0644" }
  become: yes
  notify:
    - reload nginx

- name: init templates
  template:
    src: "{{ item.file }}"
    dest: "{{ item.destination }}"
    owner: "{{ item.owner }}"
    group: "{{ item.owner }}"
    mode: "{{ item.mode }}"
    force: "{{ item.force }}"
  become: yes
  loop:
    - { file: "docker-compose.j2", destination: "{{ project_root }}/docker-compose.yml", owner: "{{ server_user }}", mode: "0644", force: yes }
  notify:
    - compose down
    - compose up

- name: Compose startup state
  assert: { that: true, quiet: true }
  changed_when: true
  notify:
    - compose up
  when: start_compose|bool