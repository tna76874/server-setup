---
- name: Check .env file
  stat: 
    path: "{{ project_root }}/.env"
  register: env_file
  changed_when: not env_file.stat.exists
  notify:
    - init env
    - first setup nextcloud

- name: Ensure directories
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    state: directory
    recurse: "{{ item.r }}"
  loop:
    - { path: "{{ project_root }}", owner: "{{ server_user }}", r: "no" }
    - { path: "{{ project_root }}/data/nginx", owner: "{{ server_user }}", r: "no" }
    - { path: "{{ project_root }}/data/nextcloud", owner: "www-data", r: "no" }
    - { path: "{{ nextcloud_database_dump_dir }}", owner: "{{ server_user }}", r: "no" }

- name: Ensure nginx.conf
  get_url:
    url: "{{ config_nginx_fpm }}"
    dest: "{{ project_root }}/data/nginx/nginx.conf"

- name: Ensure nginx template
  template:
    src: "{{ item.file }}"
    dest: "{{ item.destination }}"
    owner: "{{ item.owner }}"
    mode: "{{ item.mode }}"
  loop:
    - { file: "nginx.j2", destination: "/etc/nginx/{{ nginx_domain_name }}.d/{{ docker_config_project }}.conf", owner: "root", mode: "0644" }
  become: yes
  when: ( nginx_domain_name != None ) and ( config_deploy_nginx_config|bool )
  notify:
    - reload nginx

- name: init templates
  template:
    src: "{{ item.file }}"
    dest: "{{ item.destination }}"
    owner: "{{ item.owner }}"
    group: "{{ item.owner }}"
    mode: "{{ item.mode }}"
  become: yes
  loop:
    - { file: "docker-compose.j2", destination: "{{ project_root }}/docker-compose.yml", owner: "{{ server_user }}", mode: "0755" }
  notify:
    - compose down
    - compose up

- name: Compose startup state
  assert: { that: true, quiet: true }
  changed_when: true
  notify:
    - compose up
  when: start_compose|bool

- name: Flush handlers
  meta: flush_handlers

- name: Ensure php.ini in {{ nextcloud_www_dir }}/config
  template:
    src:  "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.owner }}"
    mode: 0644
  loop:
    - {src: "php.j2", dest: "{{ nextcloud_www_dir }}/config/php.ini", owner: "{{ 82 if ( 'alpine' in tag_nextcloud ) else 33 }}"}
    - {src: "uploadsize.j2", dest: "{{ project_root }}/data/nginx/uploadsize.conf", owner: "{{ 82 if ( 'alpine' in tag_nextcloud ) else 33 }}"}
  notify:
    - compose down
    - compose up

- name: Ensure Permissions
  shell: "{{ compose_base_cmd }} app chown -R www-data:www-data /var/www/html/{{ item }}"
  changed_when: false
  loop:
    - ""
    - "data"
    - "config"
    - "apps"
    - "custom_apps"

- name: Configure nextcloud 
  block:
  - name: set nextcloud system config.php values
    shell: '{{ docker_occ_cmd }} config:system:set {{ item }}'
    loop:  '{{ nextccloud_system_config }}'

  - name: set nextcloud mail config.php values
    shell: '{{ docker_occ_cmd }} config:system:set {{ item.key }} --value={{ item.value }} --type={{ item.type }}'
    loop:  '{{ nextccloud_mail_config }}'
    when: 
      - nextcloud_configure_mail|bool

  - name: install {{ item.name }} app
    shell: '{{ docker_occ_cmd }} app:install {{ item.name }}'
    args:
      creates: '{{ nextcloud_www_dir }}/apps/{{ item.name }}'
    loop:  '{{ nextcloud_app_config }}'
    failed_when: false
    
  - name: '{{ item.state }} {{ item.name }} app'
    shell: '{{ docker_occ_cmd }} app:{{ item.state }} {{ item.name }}'
    loop:  '{{ nextcloud_app_config }}'

  - name: upgrade apps and database tuning
    shell: '{{ docker_occ_cmd }} {{ item }}'
    loop:
      - background:cron
      - upgrade
      - app:update --all
      - db:add-missing-indices
      - db:convert-filecache-bigint
  when: force_nextcloud_config|default(false)

- name: Ensure system scripts
  template:
    src: "{{ item.file }}"
    dest: "{{ item.destination }}"
    owner: "{{ item.owner }}"
    mode: "{{ item.mode }}"
  become: yes
  loop:
    - { file: "nextcloud_optimize.j2", destination: "/usr/local/bin/nextcloud_optimize.sh", owner: "root", mode: "0750" }
    - { file: "nextcloud_docker_occ.j2", destination: "/usr/local/bin/nextcloud_docker_occ", owner: "root", mode: "0750" }
    - { file: "nextcloud_backup.j2", destination: "/usr/local/bin/nextcloud_backup", owner: "root", mode: "0750" }
    - { file: "nextcloud_maintenance.j2", destination: "/usr/local/bin/nextcloud_maintenance", owner: "root", mode: "0750" }
 
- name: optimize nextcloud cronjob
  cron:
    name: nextcloud optimize
    minute: '15'
    hour:   '01'
    user: root
    job: "/usr/local/bin/nextcloud_optimize.sh > /dev/null 2>&1"
    cron_file: nextcloud_optimize

- name: nextcloud cronjob
  cron:
    name: nextcloud cronjob
    minute: '*/15'
    user: root
    job: "{{ docker_php_cmd }} > /dev/null 2>&1"
    cron_file: nextcloud_cron

- name: Ensure backup cron job
  cron:
    name: nextcloud backup
    minute: "{{ config_backup_cron.minute }}"
    hour:   "{{ config_backup_cron.hour }}"
    day:  "{{ config_backup_cron.day }}"
    month: "{{ config_backup_cron.month }}"
    user: root
    job: "/usr/local/bin/nextcloud_backup > /dev/null 2>&1"
    cron_file: nextcloud_backup
    state: "{% if config_backups_enabled|bool %}present{% else %}absent{% endif %}"

- name: run nextcloud cronjob once
  shell: '{{ docker_php_cmd }} > /dev/null 2>&1'

- name: setup collabora app in nextcloud
  include_tasks: configure_collabora.yml
  when: 
    - online_office == 'collabora'
    - force_nextcloud_config|default(false)
    - ansible_architecture == 'x86_64'

- name: setup onlyoffice app in nextcloud
  include_tasks: configure_onlyoffice.yml
  when: 
    - online_office == 'onlyoffice'
    - force_nextcloud_config|default(false)
    - ansible_architecture == 'x86_64'

- name: setup fulltextsearch app in nextcloud
  include_tasks: fulltextsearch.yml
  when: 
    - fulltextsearch_enabled|bool
    - force_nextcloud_config|default(false)
    - ansible_architecture == 'x86_64'
