---
- name: Run role preflight
  block:
  - name: Check .env file
    stat: 
      path: "{{ project_root }}/.env"
    register: env_file
    changed_when: not env_file.stat.exists
    notify:
      - init env
      - wait for nextcloud
      - first setup nextcloud

  - name: Check if nextcloud snap installation is present
    stat: 
      path: "{{ nextcloud_snap_path }}"
    register: nextcloud_snap_installation
    changed_when: nextcloud_snap_installation.stat.exists
    notify:
      - snap warning

  ######################### QUERY IMAGE TAGS #########################
  ## REDIS
  - name: Query latest redis docker release
    uri:
      url: https://hub.docker.com/v2/repositories/library/redis/tags?page_size=10000
      return_content: true                                             
    register: redis_version_query
    ignore_errors: yes

  - name: Registering release tags for redis
    set_fact:
      tag_redis: "{{ (redis_version_query.json['results'] | rejectattr('name', 'equalto', 'latest') | rejectattr('name', 'contains', 'alpine')| rejectattr('name', 'contains', '-') | selectattr('name', 'contains', '.') | list)[0]['name'] }}"
    when: (tag_redis|default(None) == None)
  
  ## NEXTCLOUD
  - name: Query latest nextcloud docker release
    uri:
      url: https://hub.docker.com/v2/repositories/library/nextcloud/tags?page_size=10000
      return_content: true                                             
    register: nextcloud_version_query
    ignore_errors: yes

  - name: Registering nextcloud version
    set_fact:
      nextcloud_version: "{{ (nextcloud_version_query.json['results'] | rejectattr('name', 'equalto', 'latest') | rejectattr('name', 'contains', 'alpine')| rejectattr('name', 'contains', '-') | selectattr('name', 'contains', nc_major_version+'.') | list)[0]['name'] }}"
    when: (nextcloud_version|default(None) == None)

  - name: Registering nextcloud image tag
    set_fact:
      tag_nextcloud: "{{ nextcloud_version }}-{{ nextcloud_installation_family }}"
    when: (tag_nextcloud|default(None) == None)

  ## NGINX
  - name: Query latest nginx docker release
    uri:
      url: https://hub.docker.com/v2/repositories/library/nginx/tags?page_size=10000
      return_content: true                                             
    register: nginx_version_query
    ignore_errors: yes

  - name: Registering nginx tag
    set_fact:
      nginx_version: "{{ (nginx_version_query.json['results'] | rejectattr('name', 'equalto', 'latest') | rejectattr('name', 'contains', 'alpine')| rejectattr('name', 'contains', '-') | selectattr('name', 'contains', '.') | list)[0]['name'] }}"
      tag_nginx: "{{ (nginx_version_query.json['results'] | rejectattr('name', 'equalto', 'latest') | rejectattr('name', 'contains', 'alpine')| rejectattr('name', 'contains', '-') | selectattr('name', 'contains', '.') | list)[0]['name'] }}"
    when: (tag_nginx|default(None) == None)
  ####################################################################

  - name: Ensure directories-fpm-alpine
    file:
      path: "{{ item.path }}"
      owner: "{{ item.owner }}"
      state: directory
      recurse: "{{ item.r }}"
    loop:
      - { path: "{{ project_root }}", owner: "{{ server_user }}", r: "no" }
      - { path: "{{ project_root }}/data/nginx", owner: "{{ server_user }}", r: "no" }
      - { path: "{{ project_root }}/data/nextcloud", owner: "www-data", r: "no" }
      - { path: "{{ nextcloud_database_dump_dir }}", owner: "{{ server_user }}", r: "no" }
      - { path: "{{ project_root }}/data/config", owner: "root", r: "no" }
      - { path: "{{ project_root }}/build", owner: "root", r: "no" }

  ####################################################################
  - name: Ensure fpm nginx.conf - default example config
    get_url:
      url: "{{ config_nginx_fpm }}"
      dest: "{{ project_root }}/data/nginx/nginx.conf"
    when: nginx_config_from_default_example|bool
    notify:
      - compose down
      - compose up

  - name: Ensure fpm nginx.conf - repo version
    template:
      src: "{{ item.file }}"
      dest: "{{ item.destination }}"
      owner: "{{ item.owner }}"
      mode: "{{ item.mode }}"
    loop:
      - { file: "nginx.conf.j2", destination: "{{ project_root }}/data/nginx/nginx.conf", owner: "{{ 82 if ( 'alpine' in tag_nextcloud ) else 33 }}", mode: "0644" }
      - { file: "uploadsize.j2", destination: "{{ project_root }}/data/nginx/uploadsize.conf", owner: "{{ 82 if ( 'alpine' in tag_nextcloud ) else 33 }}", mode: "0644" }
    become: yes
    when: not nginx_config_from_default_example|bool
    notify:
      - compose down
      - compose up

  ####################################################################
  - name: Ensure nginx template
    template:
      src: "{{ item.file }}"
      dest: "{{ item.destination }}"
      owner: "{{ item.owner }}"
      mode: "{{ item.mode }}"
    loop:
      - { file: "nginx.j2", destination: "/etc/nginx/{{ nginx_domain_name }}.d/nginx.conf", owner: "root", mode: "0644" }
    become: yes
    when: ( nginx_domain_name != None ) and ( config_deploy_nginx_config|bool )
    notify:
      - reload nginx

  - name: init templates
    template:
      src: "{{ item.file }}"
      dest: "{{ item.destination }}"
      owner: "{{ item.owner }}"
      group: "{{ item.owner }}"
      mode: "{{ item.mode }}"
    become: yes
    loop:
      - { file: "docker-compose.j2", destination: "{{ project_root }}/docker-compose.yml", owner: "{{ server_user }}", mode: "0755" }
      - { file: "php.j2", destination: "{{ project_root }}/data/config/nextcloud.ini", owner: "root", mode: "0644" }
      - { file: "www.conf.j2", destination: "{{ project_root }}/data/config/www.conf", owner: "root", mode: "0644" }
    notify:
      - compose down
      - compose up

  - name: init Dockerfile redis template
    template:
      src: "{{ item.file }}"
      dest: "{{ item.destination }}"
      owner: "{{ item.owner }}"
      group: "{{ item.owner }}"
      mode: "{{ item.mode }}"
    become: yes
    loop:
      - { file: "Dockerfile_redis.j2", destination: "{{ project_root }}/build/Dockerfile_redis", owner: "{{ server_user }}", mode: "0755" }
    notify:
      - compose down
      - docker build redis
      - compose up

  - name: Compose startup state
    assert: { that: true, quiet: true }
    changed_when: true
    notify:
      - compose up
    when: start_compose|bool

  - name: Flush handlers
    meta: flush_handlers

  - name: Ensure Permissions
    shell: "{{ compose_base_cmd }} app chown -R www-data:www-data /var/www/html/{{ item }}"
    changed_when: false
    loop:
      - ""
    when: force_nextcloud_config|default(false)
  when: run_preflight|default(true)|bool


####################################################################
- name: Configure nextcloud 
  block:
  - name: set nextcloud system config.php values
    shell: '{{ docker_occ_cmd }} config:system:set {{ item }}'
    loop:  '{{ nextccloud_system_config }}'

  - name: set nextcloud mail config.php values
    shell: '{{ docker_occ_cmd }} config:system:set {{ item.key }} --value={{ item.value }} --type={{ item.type }}'
    loop:  '{{ nextcloud_mail_config }}'
    when: 
      - nextcloud_configure_mail|bool

  - name: install {{ item.name }} app
    shell: '{{ docker_occ_cmd }} app:install {{ item.name }}'
    args:
      creates: '{{ nextcloud_www_dir }}/apps/{{ item.name }}'
    loop:  '{{ nextcloud_app_config }}'
    failed_when: false
    
  - name: '{{ item.state }} {{ item.name }} app'
    shell: '{{ docker_occ_cmd }} app:{{ item.state }} {{ item.name }}'
    loop:  '{{ nextcloud_app_config }}'

  - name: upgrade apps and database tuning
    shell: '{{ docker_occ_cmd }} {{ item }}'
    loop:
      - background:cron
      - upgrade
      - app:update --all
      - db:add-missing-indices
      - db:convert-filecache-bigint
  when: force_nextcloud_config|default(false)|bool

#################################################

- name: System-scripts and startup routines 
  block:
  - name: Ensure system scripts
    template:
      src: "{{ item.file }}"
      dest: "{{ item.destination }}"
      owner: "{{ item.owner }}"
      mode: "{{ item.mode }}"
    become: yes
    loop:
      - { file: "nextcloud_optimize.j2", destination: "{{ config_file_optimize }}", owner: "root", mode: "0750" }
      - { file: "nextcloud_docker_occ.j2", destination: "{{ config_file_occ }}", owner: "root", mode: "0750" }
      - { file: "nextcloud_backup.j2", destination: "{{ config_file_backup }}", owner: "root", mode: "0750" }
      - { file: "nextcloud_maintenance.j2", destination: "{{ config_file_maintenance }}", owner: "root", mode: "0750" }

  - name: Ensure snap migration script
    template:
      src: "{{ item.file }}"
      dest: "{{ item.destination }}"
      owner: "{{ item.owner }}"
      mode: "{{ item.mode }}"
    become: yes
    loop:
      - { file: "nextcloud_migrate_snap_to_docker.j2", destination: "{{ project_root }}/nextcloud_migrate_snap_to_docker.sh", owner: "root", mode: "0750" }
    when: nextcloud_snap_installation.stat.exists
  
  - name: optimize nextcloud cronjob
    cron:
      name: nextcloud optimize
      minute: '15'
      hour:   '01'
      user: root
      job: "{{ config_file_optimize }} > /dev/null 2>&1"
      cron_file: nextcloud_optimize

  - name: update apps nextcloud cronjob
    cron:
      name: nextcloud update apps
      minute: '00'
      hour:   '05'
      user: root
      job: "{{ docker_occ_cmd }} app:update --all > /dev/null 2>&1"
      cron_file: nextcloud_optimize

  - name: nextcloud cronjob
    cron:
      name: nextcloud cronjob
      minute: '*/15'
      user: root
      job: " ( {{ docker_php_cmd }} > /dev/null 2>&1 ) "
      cron_file: "{{ config_file_cron }}"

  - name: Ensure backup cron job
    cron:
      name: nextcloud backup
      minute: "{{ config_backup_cron.minute }}"
      hour:   "{{ config_backup_cron.hour }}"
      day:  "{{ config_backup_cron.day }}"
      month: "{{ config_backup_cron.month }}"
      user: root
      job: "{{ config_file_backup }} > /dev/null 2>&1"
      cron_file: "{{ config_file_backup_cron }}"
      state: "{% if config_backups_enabled|bool %}present{% else %}absent{% endif %}"

  - name: run nextcloud cronjob once
    shell: '{{ docker_php_cmd }} > /dev/null 2>&1'
    when: force_nextcloud_config|default(false)
  when: startup_routines|default(true)|bool

######################

- name: setup collabora app in nextcloud
  include_tasks: configure_collabora.yml
  when: 
    - online_office == 'collabora'
    - force_nextcloud_config|default(false)
    - ansible_architecture == 'x86_64'
    - nc_config_office|bool

- name: setup onlyoffice app in nextcloud
  include_tasks: configure_onlyoffice.yml
  when: 
    - online_office == 'onlyoffice'
    - force_nextcloud_config|default(false)
    - ansible_architecture == 'x86_64'
    - nc_config_office|bool

- name: setup fulltextsearch app in nextcloud
  include_tasks: fulltextsearch.yml
  when: 
    - fulltextsearch_enabled|bool
    - force_nextcloud_config|default(false)
    - ansible_architecture == 'x86_64'
    
- name: Ensure theme
  include_tasks: theme.yml

- name: Ensure OIDC state
  include_tasks: oidc.yml