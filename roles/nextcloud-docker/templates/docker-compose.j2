services:
  db:
    image: mariadb:{{ tag_mariadb }}
    networks:
      - {{ docker_config_project }}_local_network
    restart: always
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    volumes:
      - ./data/db:/var/lib/mysql
    env_file:
      - ./.env

{% if redis_enabled|default(False) %}
  redis:
    image: redisbuildnc:{{ tag_redis }}
    restart: always
    networks:
      - {{ docker_config_project }}_local_network
{% endif %}

{% if localai_enabled|default(False)==True %}
  api:
    image: localai/localai:{{ tag_localai }}-aio-cpu
    networks:
      - {{ docker_config_project }}_local_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/readyz"]
      interval: 1m
      timeout: 20m
      retries: 5
    expose:
      - 8080
    environment:
      - DEBUG=true
    volumes:
      - /AICACHE/models/:/build/models:cached
{% endif %}

{% if (nextcloud_installation_family=='fpm-alpine') %}
  app:
    image: nextcloud:{{ tag_nextcloud }}
    restart: always
    networks:
      - {{ docker_config_project }}_local_network
    depends_on:
      - db
{% if redis_enabled|default(False) %}
      - redis
{% endif %}

    volumes:
      - ./data/nextcloud:/var/www/html
      - ./data/nextcloud/data:/var/www/html/data
      - ./data/config/nextcloud.ini:/usr/local/etc/php/conf.d/nextcloud.ini
      - ./data/config/www.conf:/usr/local/etc/php-fpm.d/www.conf
{% for vol in compose_extra_volumes %}
      - {{ vol.host }}:{{ vol.container }}{{ vol.mode }}
{% endfor %}
    env_file:
      - ./.env
    environment:
{% for envs in compose_config_env %}
      - {{ envs.var }}={{ envs.val }}
{% endfor %}
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000

  web:
    image: nginx:{{ tag_nginx }}
    restart: always
{% if traefik_enabled|default(False) %}
    expose:
      - 80
    networks:
      - {{ docker_config_project }}_local_network
      - traefik_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.{{ docker_config_project }}.rule=Host(`{{ nginx_domain_name }}`)"
      - "traefik.docker.network={{ traefik_network }}"
      - "traefik.http.routers.{{ docker_config_project }}.entrypoints=websecure"
      - "traefik.http.routers.{{ docker_config_project }}.tls=true"
      - "traefik.http.routers.{{ docker_config_project }}.tls.certresolver=myresolver"
      - "traefik.http.routers.{{ docker_config_project }}.service={{ docker_config_project }}Service"
      - "traefik.http.services.{{ docker_config_project }}Service.loadbalancer.server.url=80"
{% else %}
    ports:
      - 127.0.0.1:{{ compose_config_tcp_port }}:80
    networks:
      - {{ docker_config_project }}_local_network
{% endif %}
    volumes:
      - ./data/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./data/nginx/uploadsize.conf:/etc/nginx/conf.d/uploadsize.conf:ro
    volumes_from:
      - app
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
{% elif (nextcloud_installation_family=='apache') %}
  app:
    image: nextcloud:{{ tag_nextcloud }}
    restart: always
    depends_on:
      - db
{% if redis_enabled|default(False) %}
      - redis
{% endif %}
{% if traefik_enabled|default(False) %}
    expose:
      - 80
    networks:
      - {{ docker_config_project }}_local_network
      - traefik_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.{{ docker_config_project }}.rule=Host(`{{ nginx_domain_name }}`)"
      - "traefik.docker.network={{ traefik_network }}"
      - "traefik.http.routers.{{ docker_config_project }}.entrypoints=websecure"
      - "traefik.http.routers.{{ docker_config_project }}.tls=true"
      - "traefik.http.routers.{{ docker_config_project }}.tls.certresolver=myresolver"
      - "traefik.http.routers.{{ docker_config_project }}.service={{ docker_config_project }}Service"
      - "traefik.http.services.{{ docker_config_project }}Service.loadbalancer.server.url=80"
{% else %}
    ports:
      - 127.0.0.1:{{ compose_config_tcp_port }}:80
    networks:
      - {{ docker_config_project }}_local_network
{% endif %}
    volumes:
      - ./data/nextcloud:/var/www/html
{% for vol in compose_extra_volumes %}
      - {{ vol.host }}:{{ vol.container }}{{ vol.mode }}
{% endfor %}
    env_file:
      - ./.env
    environment:
{% for envs in compose_config_env %}
      - {{ envs.var }}={{ envs.val }}
{% endfor %}
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
{% endif %}

{% if enable_calbackup|bool %}
  nextcloud-nc-backup:
    image: waja/calcardbackup:{{ tag_calbackup }}
    networks:
      - {{ docker_config_project }}_local_network
    links:
      - db:nextcloud-db
{% if (nextcloud_installation_family=='fpm-alpine') %}
      - web:nextcloud
{% else %}
      - app:nextcloud
{% endif %}
    environment:
      - CRON_TIME=5 4 * * *
      - INIT_BACKUP=yes
      - CALCARD_OPTS=-i -r 20
      - NC_DIR=/nextcloud
      - NC_HOST={{ nginx_domain_name }}
      - NC_PORT=80
      - DB_HOST=db
    depends_on:
      - db
{% if (nextcloud_installation_family=='fpm-alpine') %}
      - web
{% else %}
      - app
{% endif %}
    restart: unless-stopped
    volumes:
      - ./data/calbackup:/backup
      - ./data/nextcloud/config:/nextcloud/config:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
{% endif %}
networks:
{% if (nc_external_network!='') %}
  {{ nc_external_network }}:
    external: true
{% endif %}
  {{ docker_config_project }}_local_network:
    driver: bridge
{% if traefik_enabled|default(False) %}
  traefik_network:
    external: True
    name: {{ traefik_network }}
{% endif %}
